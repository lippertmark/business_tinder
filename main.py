import telebot
from db_utils import *
from telebot import types
from config import *
from keyboards import *

bot = telebot.TeleBot(token=TELEGRAM_TOKEN)

db = DB(host=host, user=user, password=password, database=database)


@bot.message_handler(commands=['start'])
def start_command(message: types.Message):
    tg_id = message.chat.id
    username = message.chat.username
    if username == None:
        username = '–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'
    user_info = db.get_user(tg_id)
    if user_info == None:
        db.add_user_to_db(tg_id)
        bot.send_message(chat_id=tg_id,
                         text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –∑–Ω–∞–∫–æ–º—Å—Ç–≤, '
                              '–∑–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –ø–æ–ª–µ–∑–Ω—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–π—Ç–∏ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ üßë‚Äçüíºüë©‚Äçüíº –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ üíº\n\n'
                              '–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É üìÉ. –í–≤–µ–¥–∏ —Å–≤–æ–µ –§–ò–û)')
        db.update_user(tg_id=tg_id, fields_with_values={'user_state': 'wait_fio', 'username': username})
    else:
        user_info = db.get_user(tg_id)
        if user_info['user_state'] == 'wait_fio':
            bot.send_message('–í—ã –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã üòî\n –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –§–ò–û')
        elif user_info['user_state'] == 'wait_age':
            bot.send_message('–í—ã –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã üòî\n –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç')
        elif user_info['user_state'] == 'wait_education':
            bot.send_message('–í—ã –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã üòî')
            ask_education(tg_id=tg_id)
        elif user_info['user_state'] == 'done':
            bot.send_message(chat_id=tg_id,
                             text='–í—ã —É–∂–µ –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –∞–Ω–∫–µ—Ç—É! ‚úÖ –ü–µ—Ä–µ–π–¥–µ–º –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –∞–Ω–∫–µ—Ç –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π? üëÄ',
                             reply_markup=get_main_keyboard())


def ask_education(tg_id):
    bot.send_message(chat_id=tg_id, text='–í—ã–±–µ—Ä–∏ —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è üè´', reply_markup=get_education_keyboard())


def show_user(tg_id, other_user_tg_id):
    other_user_info = db.get_user(other_user_tg_id)
    bot.send_photo(
        chat_id=tg_id,
        photo=other_user_info['photo_file_id'],
        caption=f'@{other_user_info["username"]}\n'
                f'{other_user_info["fio"]}, {other_user_info["age"]}\n'
                f'–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: {other_user_info["education"]}',
        reply_markup=get_next_keyboard()
    )


def give_offer(tg_id: int):
    user_info = db.get_user(tg_id=tg_id)
    other_users = db.get_other_users(tg_id=tg_id)
    previous_viewed = user_info['last_viewed']
    if len(other_users) == 0:
        bot.send_message(chat_id=tg_id,
                         text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø–æ–ø—Ä–æ–±—É–π –∑–∞–π—Ç–∏ –≤ –±–æ—Ç–∞ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–∂–µ ‚è≥")
    elif previous_viewed == "":
        other_user_id = other_users[0]
        show_user(tg_id, other_user_id)
        db.update_user(tg_id=tg_id, fields_with_values={'last_viewed': str(other_user_id)})
    else:
        other_user_id = other_users[(other_users.index(str(previous_viewed)) + 1) % len(other_users)]
        show_user(tg_id=tg_id, other_user_tg_id=other_user_id)
        db.update_user(tg_id=tg_id, fields_with_values={'last_viewed': str(other_user_id)})


@bot.message_handler(content_types=['text'])
def text_handler(message: types.Message):
    tg_id = message.chat.id
    user_info = db.get_user(tg_id)
    if user_info == None:
        bot.send_message(chat_id=tg_id, text='–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /start, –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –±–æ—Ç–∞ üß©')
        return
    state = user_info['user_state']
    if message.text == '–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã üëÄ':
        give_offer(tg_id)
        return
    if state == 'done':
        bot.send_message(chat_id=tg_id,
                         text='–í—ã —É–∂–µ –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –∞–Ω–∫–µ—Ç—É! ‚úÖ –ü–µ—Ä–µ–π–¥–µ–º –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –∞–Ω–∫–µ—Ç –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π? üëÄ',
                         reply_markup=get_main_keyboard())
        return
    if state == 'wait_fio':
        bot.send_message(chat_id=tg_id, text='–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?')
        db.update_user(tg_id, {'fio': message.text, 'user_state': 'wait_age'})
        return
    if state == 'wait_age':
        age = message.text
        if age.isdigit():
            photos = bot.get_user_profile_photos(user_id=tg_id).photos
            data = {'age': message.text}
            if len(photos) != 0:
                file_id = photos[0][2].file_id
                data['photo_file_id'] = file_id
                data['user_state'] = 'wait_education'
                ask_education(tg_id=tg_id)
            else:
                bot.send_message(chat_id=tg_id, text='–ü—Ä–∏—à–ª–∏ —Å–≤–æ–µ —Ñ–æ—Ç–æ –¥–ª—è –∞–Ω–∫–µ—Ç—ã')
                data['user_state'] = 'wait_photo'
            db.update_user(tg_id, data)
        else:
            bot.send_message(chat_id=tg_id, text='–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—à–µ —Ä–∞–∑)')


@bot.message_handler(content_types=["photo"])
def photo_handler(message):
    tg_id = message.chat.id
    file_id = message.photo[2].file_id
    db.update_user(tg_id=tg_id, fields_with_values={'photo_file_id': file_id, 'user_state': 'wait_education'})
    ask_education(tg_id)


@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    tg_id = call.from_user.id
    user_info = db.get_user(tg_id)
    if user_info is None:
        bot.send_message(chat_id=tg_id, text='–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /start, –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –±–æ—Ç–∞ üß©')
        return
    if call.data == 'next':
        give_offer(tg_id)
    if call.data in education_options and user_info['user_state'] == 'wait_education':
        db.update_user(tg_id=tg_id, fields_with_values={'user_state': 'done', 'education': call.data})
        db.add_done_user(tg_id)
        bot.send_message(chat_id=tg_id,
                         text='–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã, '
                              '—Ç–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –∞–Ω–∫–µ—Ç –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π! üëÄ',
                         reply_markup=get_main_keyboard())
        bot.edit_message_reply_markup(chat_id=tg_id, message_id=call.message.id, reply_markup=None)


bot.infinity_polling()

db.close()
